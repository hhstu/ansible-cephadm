
# os
systemd_dir: /etc/systemd/system
system_env_dir: /etc/sysconfig
install_tmp: /tmp

# docker 
docker_version: 20.10.9
docker_root_dir: /var/lib/docker
DEFAULT_MIRROR: "https://kl2i4lsr.mirror.aliyuncs.com"
LOG_DRIVER: "json-file"
LOG_LEVEL: "warn"
LOG_MAX_SIZE: "100m"
LOG_MAX_FILE: 3


# kubernetes

kube_version: 1.20.1
pod_network_cidr: 10.1.0.0/16
service_network_cidr: 10.2.0.0/16
admin_kubeconfig: /etc/kubernetes/admin.conf
cluster_dns_domin: cluster.local

# ceph
enable: true
ceph_image_repo: ""
ceph_version: ""

# ETCD
# if generate new ssl certs,default false
gen_new_certs: true
etcd_ca_conf_directory: "{{ '~/etcd-certificates' | expanduser }}"

# etcd version
etcd_version: "3.4.3"
# Port where etcd listening for clients
etcd_client_port: "2379"
# Port where etcd is liste00ning for it's peer's
etcd_peer_port: "2380"
# pushgateway nodeport
pushgateway_port: "30901"
# Interface to bind etcd ports to
#net_interface: "eno1"
# Directroy for etcd configuration
etcd_conf_dir: "/etc/etcd"
# Directory to store downloaded etcd archive
# Should not be deleted to avoid downloading over and over again
etcd_download_dir: "/opt/etcd"
# Directroy to store etcd binaries
etcd_bin_dir: "/usr/local/bin"
# etcd data directory (etcd database files so to say)
etcd_data_dir: "/var/lib/etcd"
etcd_settings:
  "name": "{{ansible_hostname}}"
  "cert-file": "{{etcd_conf_dir}}/ssl/etcd.pem"
  "key-file": "{{etcd_conf_dir}}/ssl/etcd-key.pem"
  "peer-cert-file": "{{etcd_conf_dir}}/ssl/etcd.pem"
  "peer-key-file": "{{etcd_conf_dir}}/ssl/etcd-key.pem"
  "peer-trusted-ca-file": "{{etcd_conf_dir}}/ssl/ca.pem"
  "trusted-ca-file": "{{etcd_conf_dir}}/ssl/ca.pem"
  "advertise-client-urls": "{{'https://' + hostvars[inventory_hostname]['ansible_' + net_interface].ipv4.address + ':' + etcd_client_port}}"
  "initial-advertise-peer-urls": "{{'https://' + hostvars[inventory_hostname]['ansible_' + net_interface].ipv4.address + ':' + etcd_peer_port}}"
  "listen-peer-urls": "{{'https://' + hostvars[inventory_hostname]['ansible_' + net_interface].ipv4.address + ':' + etcd_peer_port}}"
  "listen-client-urls": "{{'https://' + hostvars[inventory_hostname]['ansible_' + net_interface].ipv4.address + ':' + etcd_client_port + ',https://127.0.0.1:' + etcd_client_port}}"
  "initial-cluster-token": "etcd-cluster-0" # Initial cluster token for the etcd cluster during bootstrap.
  "initial-cluster-state": "new" # Initial cluster state ('new' or 'existing')
  "data-dir": "{{etcd_data_dir}}" # etcd data directory (etcd database files so to say)
  "wal-dir": "" # Dedicated wal directory ("" means no seperated WAL directory)
  "auto-compaction-retention": "0" # Auto compaction retention in hour. 0 means disable auto compaction.
  "snapshot-count": "100000" # Number of committed transactions to trigger a snapshot to disk
  "heartbeat-interval": "100" # Time (in milliseconds) of a heartbeat interval
  "election-timeout": "1000" # Time (in milliseconds) for an election to timeout. See tuning documentation for details
  "max-snapshots": "5" # Maximum number of snapshot files to retain (0 is unlimited)
  "max-wals": "5" # Maximum number of wal files to retain (0 is unlimited)
  "cors": "*" # Comma-separated whitelist of origins for CORS (cross-origin resource sharing)
  "quota-backend-bytes": "0" # Raise alarms when backend size exceeds the given quota (0 defaults to low space quota)
  "log-package-levels": "" # Specify a particular log level for each etcd package (eg: 'etcdmain=CRITICAL,etcdserver=DEBUG')
  "log-output": "default" # Specify 'stdout' or 'stderr' to skip journald logging even when running under systemd
# Certificate authority and certificate files for etcd
etcd_certificates:
  - ca.pem        # client server TLS trusted CA key file/peer server TLS trusted CA file
  - ca-key.pem    # CA key file
  - etcd.pem      # peer server TLS cert file
  - etcd-key.pem  # peer server TLS key file



